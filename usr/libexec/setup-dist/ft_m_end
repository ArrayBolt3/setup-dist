#!/bin/bash

## Copyright (C) 2012 - 2023 ENCRYPTED SUPPORT LP <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

#set -x
set -o pipefail
set -o errtrace

error_handler() {
   local MSG="\
###########################################################
## Something went wrong. Please report this bug!
##
## BASH_COMMAND: $BASH_COMMAND
###########################################################\
"
   echo "$MSG"
   exit 1
}

trap "error_handler" ERR

maybe_start_systemcheck() {
   systemcheck_bin="systemcheck"
   systemcheck_bin_command_v_exit_code="0"
   systemcheck_bin_path="$(command -v "$systemcheck_bin" 2>/dev/null)" || { systemcheck_bin_command_v_exit_code="$?" ; true; };

   if [ "$started_by_setup_wizard_dist" = "true" ]; then
      gui_option_maybe="--gui"
   else
      if ! tty --quiet ; then
         echo "INFO: Skipping starting $systemcheck_bin, because started non-interactive."
         echo "INFO: Runnning $systemcheck_bin recommended!"
         return 0
      fi
   fi

   if [ ! "$systemcheck_bin_command_v_exit_code" = "0" ]; then
      echo "INFO: Skipping starting $systemcheck_bin, because $systemcheck_bin is unavailable."
      return 0
   fi
   if [ ! -x "$systemcheck_bin_path" ]; then
      echo "INFO: Skipping starting $systemcheck_bin, because $systemcheck_bin_path is not executable."
      return 0
   fi
   echo "INFO: Starting $systemcheck_bin..."

   exit_code="0"
   if [ "$(id -u)" = "0" ]; then
      ## Running as root. Drop to user.
      sudo -u "$SUDO_USER" "$systemcheck_bin" "$gui_option_maybe" || { exit_code="$?" ; true; };
   else
      ## Running as user already.
                           "$systemcheck_bin" "$gui_option_maybe "|| { exit_code="$?" ; true; };
   fi

   echo "INFO: End of $systemcheck_bin. You can always start $systemcheck_bin again with:
    $systemcheck_bin"
}

## This is required, otherwise systemcheck would abort.
sudo --non-interactive /usr/libexec/setup-dist/setup-dist-done

maybe_start_systemcheck

exit "$exit_code"
